<?php
ini_set("display_errors", "1");
error_reporting(E_ALL);
/**
 * 1. Создайте массив, заполненный числами от 1 до 100.
 *
 */
array(0, 100);
foreach (range(1, 100, 1) as $value) {
    echo $value;
    echo '<br>';
}
/**
 * 2. Дан массив $arr. Подсчитайте количество элементов этого массива.
 *
 */
$arr = [0, 1, 3, 5, 6, 7, 8, 9, 6, 4, 3, 33, 3, 4, 5, 6, 7, 8, 8, 9, 90, 0, 0,];
$count = count($arr);
echo $count;
echo '<br>'; // 23 elements
/**
 * 3. Дан массив $arr. Выведите на экран первый и последний элемент данного массива.
 */
$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 15, 19];
$count = count($arr);
echo $arr[0] . ' ' . $arr[$count - 1];
echo '<br>';
// 1  и 19
/**
 * 4. Дан массив $arr. С помощью функций array_sum и count найдите среднее арифметическое элементов данного массива.
 *
 */
$arr = [1, 5, 10, 20];
$count = count($arr);
echo array_sum($arr) / $count;
echo '<br>';
//  9

/**
 *5. Создайте массив, заполненный числами от 1 до 300. Найдите произведение элементов данного массива.
 */


$arr = range(1, 300, 100);
echo array_product($arr);

/**
 * 6. Даны два массива: первый с элементами '1', '2', '3', второй с элементами 'a', 'b', 'c'.
 * Сделайте из них массив с элементами '1', '2', '3', 'a', 'b', 'c'.
 */
$arr = array('1', '2', '3');
$arr1 = array('a', 'b', 'c');
$result = array_merge($arr, $arr1);
echo "<pre>";
var_dump($result);
echo "</pre>";

/**
 * 7. Даны массив с элементами '1', '2', '3', '4', '5'.
 * С помощью функции array_slice создайте массив $b с элементами '2', '3', '4'.
 */
$arr = array('1', '2', '3', '4', '5');
$b = array_slice($arr, 1, 3);
echo "<pre>";
var_dump($b);
echo "</pre>";

/**
 * 8. Дан массив 'green'=>'зеленый', 'blue'=>'голубой', 'red'=>'красный'.
 * Запишите в массив $key английские названия цветов, а в $values – русские.
 */
$arr = array('green' => 'зеленый', 'blue' => 'голубой', 'red' => 'красный');
$key = array_keys($arr);
echo "<pre>";
var_dump($key);
echo "</pre>";
$value = array_values($arr);
echo "<pre>";
var_dump($value);
echo "</pre>";

/**
 *9. Даны два массива: 'green', 'blue', 'red' и ''зеленый', 'голубой', 'красный'.
 * Создайте с их помощью массив 'green'=>'зеленый', 'blue'=>'голубой', 'red'=>'красный'.
 * Используйте функцию array_combine.
 */
$arr = array('green', 'blue', 'red');
$arr1 = array('зеленый', 'голубой', 'красный');
$b = array_combine($arr, $arr1);
echo "<pre>";
var_dump($b);
echo "</pre>";


/**
 * 10. Дан массив 'green'=>'зеленый', 'blue'=>'голубой', 'red'=>'красный'. Поменяйте местами ключи и значения.
 */
$arr = array('green' => 'зеленый', 'blue' => 'голубой', 'red' => 'красный');
$b = array_flip($arr);
echo "<pre>";
var_dump($b);
echo "</pre>";

/**
 * 11. Дан массив с элементами '1', '2', '3', '4', '5'. Создайте массив с элементами '5', '4', '3', '2', '1'.
 */
$arr = array('1', '2', '3', '4', '5');
$b = array_reverse($arr);
echo "<pre>";
var_dump($b);
echo "</pre>";

/**
 *12. Дан массив с элементами 'a', 'b', 'c', 'b', 'a'. Удалите из него повторяющиеся элементы.
 */
$arr = array('a', 'b', 'c', 'b', 'a');
$b = array_unique($arr);
echo "<pre>";
var_dump($b);
echo "</pre>";
//выводит а б с

/**
 * 13. Дан массив с элементами 'a', 'b', 'c', 'b', 'a'. Подсчитайте сколько раз встречается каждая из букв.
 */
$arr = array('a', 'b', 'c', 'b', 'a');
$b = array_count_values($arr);
echo "<pre>";
var_dump($b);
echo "</pre>";

/**
 * 14. Дан массив '3'=>'a', '1'=>'c', '2'=>'e', '4'=>'b'. Попробуйте на нем различные типы сортировок.
 */
$arr = array('3' => 'a', '1' => 'c', '2' => 'e', '4' => 'b');
$b = sort($arr);
echo "<pre>";
var_dump($arr);
echo "</pre>"; //по значению

/**
 * 15. Дан массив $arr. Перемешайте его элементы в случайном порядке.
 */
$arr = array('1', '2', '3', '4', '5');
$b = shuffle($arr);
echo "<pre>";
var_dump($arr);
echo "</pre>";


/**
 * 16Дан массив с элементами '1', '2', '3', '4', '5'. Выведите на экран случайный элемент данного масссива.
 */
$arr = array('1', '2', '3', '4', '5');

$b = array_rand($arr);

echo "<pre>";
var_dump($b);
echo "</pre>";

/**
 * 17. Дан массив с элементами '1', '2', '3', '4', '5'.
 * Создайте новый массив, в котором будут лежать квадратные корни данных элементов.
 *
 * @param int $n
 *
 * @return mixed
 */

function square($n)
{
    return ($n * $n);
}

$arr = array('1', '2', '3', '4', '5');
$b = array_map("square", $arr);
echo "<pre>";
var_dump($b);
echo "</pre>";


/**
 * 18. Дан массив с элементами '<b>php</b>', '<i>html</i>'.
 * Создайте новый массив, в котором из элементов будут удалены теги.
 */

$arr = array('<b>php</b>', '<i>html</i>');
$b = array_map('strip_tags', $arr);
echo "<pre>";
var_dump($b);
echo "</pre>";


/**
 * 19. Дан массив с элементами ' a ', ' b ', ' с '.
 * Создайте новый массив, в котором будут данные элементы без концевых пробелов.
 */
$arr = array(' a ', ' b ', ' с ');
$b = array_map('trim', $arr);
echo "<pre>";
var_dump($b);
echo "</pre>";  // посмотрел в инете решение. trim - убирает пробелы

/**
 * 20. Дан массив с элементами '1', '2', '3'.
 * Сделайте из него массив с элементами '1', '2', '3', '0', '0', '0'.
 */
$arr = array('1', '2', '3');
$b = array_pad($arr, 6, 0);
echo "<pre>";
var_dump($b);
echo "</pre>";

/**
 * Создайте массив, заполненный целыми числами от 1 до 20.
 * С помощью функции array_chunk разбейте этот массив на 5 подмассивов ('1', '2', '3', '4'; '5', '6', '7', '8' и т.д.).
 */
$arr = range(1, 20, 1);
$b = array_chunk($arr, 5);
echo "<pre>";
var_dump($b);
echo "</pre>";


?>

