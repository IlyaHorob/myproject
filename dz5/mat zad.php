<?php
ini_set("display_errors", "1");
error_reporting(E_ALL);
/**
 * 1. Даны переменные $a = 10 и $b = 3. Найдите остаток от деления $a на $b.
 */
$a = 10;
$b = 3;
echo $a % $b;
echo '<br>';

/**
 *2 Даны переменные $a и $b. Проверьте, что $a делится без остатка на $b.
 * Если это так — выведите 'Делится' и результат деления, иначе выведите 'Делится с остатком' и остаток от деления.
 */
$a = 9;
$b = 3;
if ($a % $b) {
    echo "Делится с остатками";
} else {
    echo " Делится ";
}
echo '<br>';
/**
 * 3. Даны переменные $a и $b.
 * Найдите найдите модуль разности $a и $b. Проверьте работу скрипта самостоятельно для различных $a и $b.
 */
$a = -10;
$b = 5;
echo abs($a - $b);
echo '<br>';

/**
 * 4. Даны переменные $a и $b.
 * Отнимите от $a переменную $b и результат присвойте переменной $c.
 * Сделайте так, чтобы в любом случае в переменную $c записалось положительное значение.
 * Проверьте работу скрипта при $a и $b, равных соответственно 3 и 5, 6 и 1.
 */
$a = 3;
$b = 5;
$c = abs($a - $b);
echo $c;
echo '<br>';

$a = 6;
$b = 1;
$c = abs($a - $b);
echo $c;
echo '<br>';

/**
 * 5. Возведите 2 в 10 степень. Результат запишите в переменную $st.
 */
$a = 2;
$st = $a ** 10;
echo $st;
echo '<br>';

/**
 * 6. Найдите квадратный корень из 245.
 */
$a = 245;
$a = sqrt($a);
echo $a;

/**
 * 7Дан массив с элементами 4, 2, 5, 19, 13, 0, 10.
 * Найдите квадратный корень из суммы квадратов его элементов. Для решения воспользуйтесь циклом foreach.
 */
$arr = [4, 2, 5, 19, 13, 0, 10];
foreach ($arr as $value) {
    $value = sqrt(array_sum($arr));
}
echo "<pre>";
var_dump($value);
echo "</pre>";
echo '<br>';

// 7
/**
 * 8. Найдите квадратный корень из 379.
 * Результат округлите до целых, до десятых, до сотых.
 */
$a = sqrt(379);
echo round($a);
echo '<br>';
echo round($a, 1);
echo '<br>';
echo round($a, 2);
echo '<br>';


/**
 * 9. Найдите квадратный корень из 587. Округлите результат в большую и меньшую сторону, запишите результаты округления в ассоциативный массив с ключами 'floor' и 'ceil'.
 */

$a = sqrt(587);
$ceil = ceil($a);
$floor = floor($a);
$arr = array('floor' => $floor, 'ceil' => $ceil);
echo "<pre>";
var_dump($arr);
echo "</pre>";

/**
 * 10. Даны числа 4, -2, 5, 19, -130, 0, 10. Найдите минимальное и максимальное число.
 */
$arr = array(4, -2, 5, 19, -130, 0, 10);
echo $a = max($arr);
echo '<br>';
echo $b = min($arr);
echo '<br>';

/**
 * 11. Выведите на экран случайное число от 1 до 100.
 */
echo rand(1, 100);
echo '<br>';

/**
 * 12. Сделайте так, чтобы каждый раз при обновлении страницы на
 * экран выводилась случайным образом одна из трех картинок.
 */

$arr = array($a, $b, $c);
$a = "<img src='http://vitamarg.com/f/foto/2018-21.jpg '> ";
$b = "<img src='https://3dnews.ru/assets/external/illustrations/2011/04/18/609829/vieria-1.jpg '> ";
$c = "<img src='https://i.ytimg.com/vi/5t6I7DUT8GQ/maxresdefault.jpg'> ";
echo "<pre>";
    var_dump(array_rand($arr));
echo "</pre>"; //  ----------------------------не віводит картинку


/**
 *
 * 13. Заполните массив 10-ю случайными числами. (Подсказка: нужно воспользоваться циклами for или while).
 */
$arr = [];
for ($i = 1; $i <= 10; $i++) {
    $arr[] = rand(1, 20);
}
echo "<pre>";
var_dump($arr);
echo "</pre>";

/**
 * 14. Напишите скрипт, который будет находить корни квадратного уравнения.
 *
 */
// x^2+x-6=0
$x1 = '';
$x2 = '';
$a = 1;
$b = 1;
$c = -6;
$d = ($b * $b) - (4 * $a * $c);
if ($d > 0) {
    $x1 = ((-$b) + sqrt($d)) / 2 * $a;
    $x2 = ((-$b) - sqrt($d)) / 2 * $a;
}
echo $x1 . 'and' . $x2;
echo '<br>';


/**
 * 15. Напишите скрипт, который   будет находить факториал числа.
 * Факториал — это произведение всех целых чисел, меньше данного. Например, 4! = 1*2*3*4 = 24.
 */

$a = 5;
$result = 1;
for ($i = 1; $i <= $a; $i++) {
    $result *= $i;
}
echo $result;
echo '<br>';

/**
 * 16. Напишите скрипт, который проверяет, является ли данное число простым
 * (простое число — это то, которое делится только на 1 и на само себя).
 */

$a = 17;
$i = 2;
$arr = array();
while ($a != 1) {
    if ($a % $i == 0) {
        $arr[] = $i;
        $a /= $i;
    } else {
        $i++;
    }
}
if ($arr[0] == $i) {
    echo 'Простое число';
}
echo '<br>';
/**
 * 17. Дан массив $arr. Найдите среднее арифметическое его элементов.
 * Подсказка: количество элементов массива можно подсчитать функцией count. Проверьте задачу на массиве с элементами 12, 15, 20, 25, 59, 79.
 */
$arr = array(12, 15, 20, 25, 59, 79);
$count = count($arr);
$b = array_sum($arr) / $count;
echo $b;
echo '<br>';
//35

/**
 * 18. Напишите скрипт-калькулятор единого налога. Налог считается так: если вы заработали менее,
 * чем ставка $stavka этого налога, умноженная на 30 — то платите ставку.
 * Если же вы заработали более, чем 30*$stavka, то платите не только ставку налога, но и 5% от той суммы, на которую вы превысили 30*$stavka.
 */
$zarabotok = 37000;
$stavka = 1200;// ставка налога на прибыль составляет 18%
$nalog = $stavka * 30;
if ($zarabotok < $nalog) {
    echo 'Платим' . ' ' . $stavka;
} else {
    echo 'Платим' . ' ' . ($stavka + (($zarabotok - $nalog) / 100 * 5));// 5 %
}
echo '<br>';

/**
 * 19. Напишите скрипт-калькулятор оплаты за электроэнергию.
 * Сумма считается так: если вы потратили за месяц менее 150 киловатт,
 * то сумма считается по одной ставке $summ1 за 1 киловатт, всё,
 * что больше 150 и меньше 300 киловатт считается по ставке $summ2, а все киловатты после 300 — по ставке $summ3.
 */
function my_kilowatt($kilowatt)
{
    $sum1 = 10;
    $sum2 = 15;
    $sum3 = 20;
    if ($kilowatt < 150) {
        $kilowatt *= $sum1;
    } elseif ($kilowatt >= 150 && $kilowatt < 300) {
        $kilowatt *= $sum2;
    } elseif ($kilowatt >= 300) {
        $kilowatt *= $sum3;
    }
    
    return $kilowatt;
}

echo my_kilowatt(400);
echo '<br>';
/**
 * 20. Напишите скрипт, который найдет все простые числа в заданном промежутке.
 * Проверьте его работу на промежутке от 1 до 1000.
 */
//$arr=[];
//for($i=1;$i<1000;$i++){
//    $arr[]=.
//}
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
function my_prost($number)
{
    if ($number == 2) {
        return true;
    }
    if ($number % 2 == 0) // не должно делится на 2
    {
        return false;
    }
    $i = 3;
    $max = (int) sqrt($number);
    while ($i <= $max) {
        if ($number % $i == 0)      // не должно делится на 3
        {
            return false;
        }
        $i += 2;            // в каждом цикле увеличиваем значение на +2
    }
    
    return true;
}

function my_numb($max)
{
    $arr = [];
    for ($i = 3; $i <= $max; $i++) {
        if (my_prost($i)) {
            $arr[] = $i;
        } // просто берем значение из предідущей функции и заносим в массив.
    }
    
    return $arr;
}

echo "<pre>";
var_dump(my_numb(1000));
echo "</pre>";
echo '<br>';
// -     --------------------------посмотрел в инете. разобрал.
/**
 * 21. Напишите скрипт, который будет находить тройки целых чисел, удовлетворяющих теореме Пифагора.
 */
$n = 30;
$res = [];
for ($i = 1; $i < $n; $i++) {
    for ($j = 1; $j < $n; $j++) {
        for ($r = 1; $r < $n; $r++) {
            if ($i * $i + $j * $j == $r * $r) {
                $res[$r] = '' . $i . ' ' . $j . ' ' . $r;
            }
        }
    }
}
echo "<pre>";
var_dump($res);
echo "</pre>";
//--------------------------------------- решение посмотрел в инете. сначала не понял как делать, но оказалось -
// єлементарно. разобрал решение на листике.
