<?php
ini_set("display_errors", "1");
error_reporting(E_ALL);
/**
 * 1.Дана строка 'Привет, мир!'. Сделайте из нее строку 'ПРИВЕТ МИР!'.
 */
$str = 'Hello word';
$str = strtoupper($str);
echo $str;
echo '<br>';
/**
 * 2Дана строка 'PHP'. Сделайте из нее строку 'php'.
 */
$str = 'PHP';
$str = strtolower($str);
echo $str;
echo '<br>';

/**
 *3 Дана строка 'москва'. Сделайте из нее строку 'Москва'.
 */
$str = 'moscow';
$str = ucfirst($str);
echo $str;
echo '<br>';

/**
 * 4.Дана строка 'МОСКВА'. Сделайте из нее строку 'Москва'.
 */
$str = 'MOSCOW';
$str = strtolower($str);
$str = ucfirst($str);
echo $str;
echo '<br>';

/**
 * 5. Дана строка 'иванов иван иванович'. Сделайте из нее строку 'Иванов Иван Иванович'.
 */
$str = 'ivanov ivan ivanovich';
$str = ucwords($str);
echo $str;
echo '<br>';
/**
 * 6 Дана строка 'я учу PHP!'. Найдите количество символов в этой строке.
 */
$str = 'I learn PHP';
$str = strlen($str);
echo $str;
echo '<br>';

/**
 *7. Дана строка 'я учу PHP!'. Вырежьте из нее слово 'учу' и слово 'PHP'.
 */
$str = 'I learn PHP';
$str = substr($str, 1, 6);
echo $str;
echo '<br>';

/**
 * 8. Дана переменная $str, в которой хранится какой-либо текст.
 * Реализуйте обрезание длинного текста по следующему принципу: если количество символов этого текста больше заданного в переменной $n, то в переменную $result запишем первые $n символов строки $str и добавим в конец многоточие '...'.
 * В противном случае в переменную $result запишем содержимое переменной $str.
 */
$str = 'My car is white!';
$strlen = strlen($str);
$n = 4;  // работает! отображает полній текст.  если поставить н = 20 - тогда символі и ...
if ($n < $strlen) {
    echo $result = substr($str, 0, $n) . '...';
} else {
    echo $result = $str;
}
echo '<br>';
/**
 * Напишите функцию, которая генерирует пароль. Функция должна принимать параметр. Параметр должен задавать количество символов в пароле.
 *
 * @param int $n
 */

function my_password1($length)
{
    $a = '';
    for ($i = 1; $i < $length; $i++) {
        $a .= rand(0, 9);
    }
    
    return $a;
}

echo my_password1(2);
echo '<br>';
/**
 * 10. Создайте переменную $password.
 * Присвойте переменной $password результат функции из предыдущего примера.
 * Если количество символов пароля больше 5-ти и меньше 10-ти,
 * то выведите пользователю сообщение о том, что пароль подходит,
 * иначе сообщение о том, что нужно придумать другой пароль.
 */

$password = my_password1(115);
if ((strlen($password) > 5) && (strlen($password) < 10)) {
    echo 'Пароль подходит';
} else {
    echo 'Придумайте другой пароль';
}

echo '<br>';
/**
 * 11. Нарисуйте пирамиду, как показано на рисунке, только у вашей пирамиды должно столько рядов, чтобы последний элемент пирамидки состоял из одного символа. Первый ряд пирамиды должен хранится в переменной $str (может иметь различное количество символов). Подсказка: воспользуйтесь функциями strlen и substr.
 *
 * xxxxxxxxxx
 * xxxxxxxxx
 * xxxxxxxx
 * xxxxxxx
 * xxxxxx
 */
$str = 'xxxxxxxxxx';
$strlen = strlen($str);
for ($i = $strlen - 1; $i > 0; $i--) {
    echo substr($str, 0, $i) . '<br>';
}
echo '<br>';
/**
 * 12. Дана строка 'Я-учу-PHP!'. Замените все дефисы на тег '<br>'.
 */
$str = 'I-learn-PHP!';
$b = str_replace('-', '<br>', $str);
echo $b;
echo '<br>';
/**
 * 13. Дана строка '31.12.2013'. Замените все точки на дефисы.
 */
$str = '31.12.2013';
$b = str_replace('.', '-', $str);
echo $b;
echo '<br>';

/**
 * 14. Дана строка $str. Замените смайлики ':)', ':(', '^-^', которые встречаются в этой строке на
 * соответсвующие картинки (<img src=''>).
 */
$str = "':)', ':(', '^-^'";
$b = str_replace(
    "':)', ':(', '^-^'", "<img src=1.png>,
<img src='3.jpg'>,<img src=2.jpg>", $str
);
echo $b;
echo '<br>';
//------------------------------------не віводит фото

/**
 * 15 15. Дана переменная $str, в которой хранится строка русского текста.
 * Напишите скрипт, который запишет транслит этого текста в переменную $translit. Напишите также скрипт, который выполнит обратную операцию.
 */
$str = 'Текст';
echo $translit = str_replace('Текст', 'Tecst', $str);
echo '<br>';
$str1 = 'Tecst';
echo $translit1 = str_replace('Tecst', 'Текст', $str);
/**
 * 16. Дана строка 'я учу PHP!'.
 * С помощью функции explode запишите каждое слово этой строки в отдельный элемент массива.
 */
$str = 'I learn PHP';
$a = explode(' ', $str);
echo "<pre>";
var_dump($a);
echo "</pre>";

/**
 * 17. Дан массив с элементами 'html', 'css', 'php', 'js'.
 * С помощью функции implode создайте строку из этих элементов, разделенных запятыми.
 */
$arr = array('html', 'css', 'php', 'js');
echo $a = implode(',', $arr);
echo '<br>';
/**
 * 18. В переменной $date лежит дата в формате '2013-12-31'.
 * Преобразуйте эту дату в формат '31.12.2013'.
 */
$date = '2013-12-31';
$date = str_replace('-', '.', $date);
$date = explode('.', $date);
echo $date = $date[2] . '.' . $date[1] . '.' . $date[0];
echo '<br>';

/**
 * 19. В переменной $date лежит дата в формате '31.12.2013'. Преобразуйте эту дату в формат '2013-12-31'.
 */
$date = '31.12.2013';
$date = str_replace('.', '-', $date);
$date = explode('-', $date);
echo $date = $date[2] . '-' . $date[1] . '-' . $date[0];
echo '<br>';
/**
 * 20. Дана строка ' php '. Сделайте из нее 3 разных строки с помощью функций класса trim: 'php', ' php', 'php '.
 */
$str = ' php ';
echo $str = trim($str);
echo '<br>';
$str = ' php ';
echo $str = ltrim($str);
echo '<br>';
$str = ' php ';
echo $str = rtrim($str);
echo '<br>';

/**
 * 21. Дана строка 'html, <b>php</b>, js'. Удалите теги из этой строки.
 */
$str = "html, <b>php</b>, js";
echo $str = strip_tags($str);
echo '<br>';

/**
 * 22. Дана строка 'html, <b>php</b>, js'.
 * Выведите ее на экран 'как есть': то есть браузер не должен преобразовать <b> в жирный.
 */
$str = "'html, <b>php</b>, js'";
echo $str = htmlspecialchars($str);
echo '<br>';
/**
 * 23. Узнайте код символов 'a', 'b', 'c', пробела.
 */
$a = 'a';
echo $a = ord($a);
echo '<br>';
$b = 'b';
echo $b = ord($b);
echo '<br>';
$c = 'c';
echo $c = ord($c);
echo '<br>';
$d = ' ';
echo $d = ord($d);
echo '<br>';

/**
 *24. Изучите таблицу ASCII.
 * Определите границы, в которых располагаются буквы английского алфавита.
 * Выведите на экран символ с кодом 33.
 */

echo chr(33);
echo '<br>';
/**
 *25. Запишите в переменную $str случайный символ — большую букву латинского алфавита.
 * Подсказка: с помощью таблицы ASCII определите какие целые числа
 * соответствуют большим буквам латинского алфавита.
 */
$str = rand(65, 90);
echo $str = chr($str);
echo '<br>';
/**
 * 26. Запишите в переменную $str случайную строку $len длиной, состоящую из маленьких букв латинского алфавита.
 * Подсказка: воспользуйтесь циклом for или while.
 */
$str = '';
$len = 15;
for ($i = 1; $i < $len; $i++) {
    $str .= chr(rand(65, 90));
}
echo $str;
echo '<br>';
/**
 * 27. Дана строка 'Мама мыла раму'. Узнайте количество букв 'a' и 'м', входящих в эту строку.
 */
$str = 'Mama myla ramu';
echo $str = substr_count($str, 'm');
echo '<br>';
$str = 'Mama myla ramu';
echo $str = substr_count($str, 'a');

/**
 * 28. Скопируйте весь текст со страницы php.su, запишите его в переменную $str. Подсчитайте количество символов и количество слов в даннной строке.
 */
$str = "
   PHP.SU

FORUM.PHP.SU  

  Главная  	  Статьи  	Изучение PHP	Функции PHP	FAQ	PHP скрипты	MySQL	Установка	Учебники	Уроки	Download	  Форум  

  Основы PHP
  Что такое PHP?
  Возможности PHP
  Преимущества PHP
  История развития
  Что нового в PHP5?
  «Движок» PHP
  Переход на PHP 5.3
New Переход на PHP 5.6
  Введение в PHP
  Изучение PHP
  Основы CGI
  Синтаксис PHP
  Типы данных PHP
  Переменные в PHP
  Константы PHP
  Выражения PHP
  Операторы PHP
  Конструкции PHP
  Ссылки в PHP
  PHP и ООП
  Безопасность
  Функции PHP
  Функции по категориям
  Функции по алфавиту
  Стандартные функции
  Пользовательские
  PHP и HTTP
  Работа с формами
  PHP и Upload
  PHP и Cookies
  PHP и базы данных
  PHP и MySQL
  Документация MySQL
  Учебники
  Учебники по PHP
  Учебники по MySQL
  Другие учебники
  Уроки PHP
  Введение
  Самые основы
  Управление
  Функции
  Документация
  Математика
  Файлы
  Основы SQL
  Дата и время
  CURL
  Изображения
  Стили
  Безопасность
  Установка
  Проектирование БД
  Регулярные выражения
  Подготовка к работе
  Быстрый старт
  Установка PHP
  Установка MySQL
  Конфигурация PHP
  Download / Скачать
  Скачать Apache
  Скачать PHP
  Скачать PECL
  Скачать PEAR
  Скачать MySQL
  Редакторы PHP
  Полезные утилиты
  Документация
  PHP скрипты
  Скачать скрипты
  Инструменты
  PHP в примерах
  Новости портала
 Добро пожаловать на портал по PHP, MySQL и другим веб-технологиям!
 Все о PHP, MySQL и не только !

Спасибо за посещение нашего портала! Мы создали достаточно крупный ресурс по PHP, MySQL и другим веб-технологиям. Надеемся на то, что представленная на страницах портала информация будет Вам полезна. Приходите к нам чаще!

(( Сделать домашней ))    (( Добавить в избранное ))
    
 Релизы PHP
Стабильный PHP 5.6 (5.6.18)  tar.bz2 | tar.gz | tar.xz | for Windows
Стабильный PHP 5.5 (5.5.32)  tar.bz2 | tar.gz | tar.xz | for Windows
Стабильный PHP 5.4 (5.4.45)  tar.bz2 | tar.gz | tar.xz | for Windows
Released PHP 7.0 (7.0.3)  tar.bz2 | tar.gz | tar.xz | for Windows
Стабильный MySQL 5.7 (5.7.11)
 PHP для начинающих и продвинутых веб-программистов
Уроки PHP. На основе дискуссий форума PHP.SU.

Вы начинаете изучать PHP? Ознакомьтесь с вводным курсом обучения PHP.
Так же для новичков наши профессионалы собрали материалы по форуму PHP.SU и разместили это в виде Уроков PHP.

Знаете основы PHP и хотите укрепить свои познания? 
Обратитесь непосредственно к разделу \"Изучение PHP\". 
Рекомендуем также ознакомиться с принципами работы PHP с протоколом HTTP.

Вам также потребуется справочник по всем функциям PHP, полностью на русском. 
Справочник по функциям PHP оснащен системой поиска функций по ключевым словам.

В PHP есть обширные средства для работы с СУБД, такими, как MySQL. 
Вы можете использовать PHP для работы с большим количеством различных типов СУБД.

Наш портал содержит множество статей по PHP, MySQL, Apache, PEAR, регулярным выражениям, XML, другим веб-технологиям. 
Общее число статей на данный момент составляет более 250.

У нас Вы найдете большое количество учебников и справочников по PHP, MySQL, HTML, XML, JavaScript и.т.д.

Для того, чтобы заниматься разработкой PHP скриптов и их отладкой, Вам необходим интерпретатор PHP, а также веб-сервер, например, Apache. 
Если Вы будете создавать скрипты с использованием баз данных, то хорошим выбором будет MySQL.
Если Вы уже достаточно продвинутый пользователь и хотите самостоятельно установить и сконфигурировать веб-сервер, PHP и MySQL, то Вам в помощь раздел \"Подготовка к работе\".

Раздел \"PHP скрипты\" поможет Вам скачать большое количество различных скриптов PHP.

Раздел \"Download\" поможет Вам скачать необходимые компоненты: PHP, Apache, MySQL, PECL, PEAR, редакторы PHP кода, полезные утилиты для PHP и документацию по PHP, MySQL, PEAR и Apache.

Поиск по сайту
Поиск информации на портале PHP.SU

  GO!
Последние темы форума PHP.SU
»  https сайты в iframe (2)
»  какие есть бесплатные хос... (14)
»  Аналог iframe (1)
»  Аналог iframe (0)
»  Не корректно работает sub... (0)
»  Фильтр выборки товаров по... (0)
»  set_error_handler и назва... (4)
»  Помогите, отправить запро... (5)
»  помогите написать код из ... (0)
»  Доработка скрипта рулетки... (0)
»  Автопараграф (5)
»  на каком движке этот фору... (8)
»  Как занести все значения ... (2)
»  сортировка по кругу начин... (4)
»  Написать небольшой скрипт (2)

Если что не понятно, не стестняйтесь, 
задавайте вопросы на нашем форуме.
Нас уже 19 026 пользователей. 
Задано 53 298 вопросов 
и получено 279 968 ответов и советов.
Вакансии разработчикам
»  Php-developer full stack. R&...
Работа в офисе в г. Москве (м. Авиамоторная) или удаленно (по результа

»  Требуется программист С++ . З/...
В офис

»  PHP developer
Москва или удаленно

»  PHP-программист (удаленная работ...
»  Требуется программист ASP.NET в ...
работа в офисе

Больше вакансий 
в разделе нашего форума 'Работа'.
Опросы на PHP.SU
Какие качества PHP Вы считаете наиболее важными?

 Высокая производительность
 
Распространенность
 
Удобный синтаксис
 
Универсальность
 
Безопасность
 
Гибкость
 
Другие
Голосовать!

Результаты опроса

 
   © 2006 - 2017 PHP.SU | О проекте | Гостевая книга | Обратная связь | Политика проекта | Наши кнопки | Добавить в избранное | sitemap |

Powered by PHP   Powered By MySQL   Powered by Nginx   Valid CSS 
 Наши партнеры: В нашем магазине антирадары качественные, надежные и работают действительно адекватно.
   Рейтинг@Mail.ru      

";
echo $str = str_word_count($str);
echo '<br>';
//$str="
//   PHP.SU
//
//FORUM.PHP.SU
//
//  Главная  	  Статьи  	Изучение PHP	Функции PHP	FAQ	PHP скрипты	MySQL	Установка	Учебники	Уроки	Download	  Форум
//
//  Основы PHP
//  Что такое PHP?
//  Возможности PHP
//  Преимущества PHP
//  История развития
//  Что нового в PHP5?
//  «Движок» PHP
//  Переход на PHP 5.3
//New Переход на PHP 5.6
//  Введение в PHP
//  Изучение PHP
//  Основы CGI
//  Синтаксис PHP
//  Типы данных PHP
//  Переменные в PHP
//  Константы PHP
//  Выражения PHP
//  Операторы PHP
//  Конструкции PHP
//  Ссылки в PHP
//  PHP и ООП
//  Безопасность
//  Функции PHP
//  Функции по категориям
//  Функции по алфавиту
//  Стандартные функции
//  Пользовательские
//  PHP и HTTP
//  Работа с формами
//  PHP и Upload
//  PHP и Cookies
//  PHP и базы данных
//  PHP и MySQL
//  Документация MySQL
//  Учебники
//  Учебники по PHP
//  Учебники по MySQL
//  Другие учебники
//  Уроки PHP
//  Введение
//  Самые основы
//  Управление
//  Функции
//  Документация
//  Математика
//  Файлы
//  Основы SQL
//  Дата и время
//  CURL
//  Изображения
//  Стили
//  Безопасность
//  Установка
//  Проектирование БД
//  Регулярные выражения
//  Подготовка к работе
//  Быстрый старт
//  Установка PHP
//  Установка MySQL
//  Конфигурация PHP
//  Download / Скачать
//  Скачать Apache
//  Скачать PHP
//  Скачать PECL
//  Скачать PEAR
//  Скачать MySQL
//  Редакторы PHP
//  Полезные утилиты
//  Документация
//  PHP скрипты
//  Скачать скрипты
//  Инструменты
//  PHP в примерах
//  Новости портала
// Добро пожаловать на портал по PHP, MySQL и другим веб-технологиям!
// Все о PHP, MySQL и не только !
//
//Спасибо за посещение нашего портала! Мы создали достаточно крупный ресурс по PHP, MySQL и другим веб-технологиям. Надеемся на то, что представленная на страницах портала информация будет Вам полезна. Приходите к нам чаще!
//
//(( Сделать домашней ))    (( Добавить в избранное ))
//
// Релизы PHP
//Стабильный PHP 5.6 (5.6.18)  tar.bz2 | tar.gz | tar.xz | for Windows
//Стабильный PHP 5.5 (5.5.32)  tar.bz2 | tar.gz | tar.xz | for Windows
//Стабильный PHP 5.4 (5.4.45)  tar.bz2 | tar.gz | tar.xz | for Windows
//Released PHP 7.0 (7.0.3)  tar.bz2 | tar.gz | tar.xz | for Windows
//Стабильный MySQL 5.7 (5.7.11)
// PHP для начинающих и продвинутых веб-программистов
//Уроки PHP. На основе дискуссий форума PHP.SU.
//
//Вы начинаете изучать PHP? Ознакомьтесь с вводным курсом обучения PHP.
//Так же для новичков наши профессионалы собрали материалы по форуму PHP.SU и разместили это в виде Уроков PHP.
//
//Знаете основы PHP и хотите укрепить свои познания?
//Обратитесь непосредственно к разделу \"Изучение PHP\".
//Рекомендуем также ознакомиться с принципами работы PHP с протоколом HTTP.
//
//Вам также потребуется справочник по всем функциям PHP, полностью на русском.
//Справочник по функциям PHP оснащен системой поиска функций по ключевым словам.
//
//В PHP есть обширные средства для работы с СУБД, такими, как MySQL.
//Вы можете использовать PHP для работы с большим количеством различных типов СУБД.
//
//Наш портал содержит множество статей по PHP, MySQL, Apache, PEAR, регулярным выражениям, XML, другим веб-технологиям.
//Общее число статей на данный момент составляет более 250.
//
//У нас Вы найдете большое количество учебников и справочников по PHP, MySQL, HTML, XML, JavaScript и.т.д.
//
//Для того, чтобы заниматься разработкой PHP скриптов и их отладкой, Вам необходим интерпретатор PHP, а также веб-сервер, например, Apache.
//Если Вы будете создавать скрипты с использованием баз данных, то хорошим выбором будет MySQL.
//Если Вы уже достаточно продвинутый пользователь и хотите самостоятельно установить и сконфигурировать веб-сервер, PHP и MySQL, то Вам в помощь раздел \"Подготовка к работе\".
//
//Раздел \"PHP скрипты\" поможет Вам скачать большое количество различных скриптов PHP.
//
//Раздел \"Download\" поможет Вам скачать необходимые компоненты: PHP, Apache, MySQL, PECL, PEAR, редакторы PHP кода, полезные утилиты для PHP и документацию по PHP, MySQL, PEAR и Apache.
//
//Поиск по сайту
//Поиск информации на портале PHP.SU
//
//  GO!
//Последние темы форума PHP.SU
//»  https сайты в iframe (2)
//»  какие есть бесплатные хос... (14)
//»  Аналог iframe (1)
//»  Аналог iframe (0)
//»  Не корректно работает sub... (0)
//»  Фильтр выборки товаров по... (0)
//»  set_error_handler и назва... (4)
//»  Помогите, отправить запро... (5)
//»  помогите написать код из ... (0)
//»  Доработка скрипта рулетки... (0)
//»  Автопараграф (5)
//»  на каком движке этот фору... (8)
//»  Как занести все значения ... (2)
//»  сортировка по кругу начин... (4)
//»  Написать небольшой скрипт (2)
//
//Если что не понятно, не стестняйтесь,
//задавайте вопросы на нашем форуме.
//Нас уже 19 026 пользователей.
//Задано 53 298 вопросов
//и получено 279 968 ответов и советов.
//Вакансии разработчикам
//»  Php-developer full stack. R&...
//Работа в офисе в г. Москве (м. Авиамоторная) или удаленно (по результа
//
//»  Требуется программист С++ . З/...
//В офис
//
//»  PHP developer
//Москва или удаленно
//
//»  PHP-программист (удаленная работ...
//»  Требуется программист ASP.NET в ...
//работа в офисе
//
//Больше вакансий
//в разделе нашего форума 'Работа'.
//Опросы на PHP.SU
//Какие качества PHP Вы считаете наиболее важными?
//
// Высокая производительность
//
//Распространенность
//
//Удобный синтаксис
//
//Универсальность
//
//Безопасность
//
//Гибкость
//
//Другие
//Голосовать!
//
//Результаты опроса
//
//
//   © 2006 - 2017 PHP.SU | О проекте | Гостевая книга | Обратная связь | Политика проекта | Наши кнопки | Добавить в избранное | sitemap |
//
//Powered by PHP   Powered By MySQL   Powered by Nginx   Valid CSS
// Наши партнеры: В нашем магазине антирадары качественные, надежные и работают действительно адекватно.
//   Рейтинг@Mail.ru
//
//";
//echo "<pre>";
//    var_dump($str=str_split($str));
//echo "</pre>";
//echo '<br>';
/**
 * 29. Создайте массив гласных букв. С помощью этого массива подсчитайте количество гласных в строке $str. Результат представьте в виде ассоциативного массива, где ключами будут буквы, а элементами их количество.
 */
$str = 'The house is large';
$letters = array('A', 'E', 'I', 'J', 'O', 'U', 'Y', 'a', 'e', 'i', 'j', 'o', 'u', 'y');
$count = [];
foreach ($letters as $value) {
    $count[$value] = substr_count($str, $value);
}
echo "<pre>";
var_dump($count);
echo "</pre>";
echo '<br>';

/**
 * 30. Дана строка '1234567890'. Разбейте ее на массив с элементами '12', '34', '56', '78', '90'.
 */
$str = '1234567890';
$arr = str_split($str, 2);
echo "<pre>";
var_dump($arr);
echo "</pre>";

/**
 * 31. Проверьте, является ли пара слов палиндромом (одинаково читается во всех направлениях, кот-ток, нос-сон).
 */
$str = 'kot-tok';
$revers = strrev($str);
if ($revers == $str) {
    echo $str . ' - palindrom';
} else {
    echo ' Ne palindrom';
}
echo '<br>';
/**
 * 32. Дан массив $arr.
 * Найдите в нем все пары слов-палиндромов (одинаково читаются во всех направлениях, кот-ток, нос-сон).
 * Результат выводите в виде строка формата 'нос — сон'. Проверьте работу скрипта на массиве $arr из примера.
 * Совет: нужно сделать не один, а два цикла.
 */

$arr = array('slon', 'nos', 'tok', 'tak', 'kot', 'son', 'mir', 'son', 'rim');
$count = count($arr);
for ($i = 1; $i < $count - 1; $i++) {
    for ($j = 1; $j < $i; $j++) {
        if ($arr[$i] == strrev($arr[$j])) {
            echo $arr[$i] . '-' . $arr[$j] . '<br>';
        }
    }
}
echo '<br>';
/**
 * 33. Определите является ли фраза палиндромом.
 * Примеры: 'A roza upala na lapu Asora'.
 * Обратите внимание на то, что при обратном чтении игнорируются пробелы,
 * запятые, дефисы, тире и большие буквы (подсказка: значит сначала нужно привести строку к стандартному виду
 * — удалить лишние символы, привести все к нижнему регистру).
 */
$str = 'A roza upala na lapu Asora';
$str = strtolower($str);
$str = str_replace(array(' ',',','-','A-Z'), '', $str);
$revers = strrev($str);
if ($str == $revers) {
    echo 'Palindrom';
} else {
    echo ' Ne palindrom';
}
echo '<br>';

/**
 * 34. Нарисуйте пирамиду, как показано на рисунке, только у вашей пирамиды должно быть 9 рядов, а не 5.
 * Решите задачу с помощью одного цикла и функции str_repeat.
 *
 * x
 * xx
 * xxx
 * xxxx
 * xxxxx
 */


for ($i = 1; $i < 9; $i++) {
    echo str_repeat('x', $i) . '<br/>';
}
echo '<br>';
/**
 * 35. Нарисуйте пирамиду, как показано на рисунке, только у вашей пирамиды должно быть 9 рядов, а не 5.
 * Решите задачу с помощью одного цикла и функции str_repeat.
 *
 * 1
 * 22
 * 333
 * 4444
 * 55555
 */

for ($i = 1; $i <= 9; $i++) {
    echo str_repeat($i, $i) . '<br/>';
}
echo '<br>';
